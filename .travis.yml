# Define environment
dist: xenial # Ubuntu 16.04
language: bash

# Only build pushes to master branch
branches:
  only:
    - master

# Export variables
env:
  - tf_init_cli_options="-input=false" tf_validation_cli_options="" tf_plan_cli_options="-lock=false -input=false" tf_apply_cli_options="-auto-approve -input=false"

# Install dependencies
before_install:
  - wget https://releases.hashicorp.com/terraform/"$TF_VERSION"/terraform_"$TF_VERSION"_linux_amd64.zip
  - unzip terraform_"$TF_VERSION"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$TF_VERSION"_linux_amd64.zip

# Terraform Plan and Apply
# Plan only on pull requests, Apply on merged code
jobs:
  include:
    - stage: containerised plan
      if: type IN (push)
      script:
        - docker run --rm --volume $TRAVIS_BUILD_DIR:/terraform --workdir /terraform hashicorp/terraform:$TERRAFORM_VERSION
    - stage: terraform plan
      # Only run terraform validate and plan state if within a pull request
      if: type IN (push)
      script:
        - pwd
        - ls -lsah 
        - echo "Validating Terraform fmt"
        - terraform fmt -recursive -check
        - echo "Pull request detected, creating change plan"
        - terraform init $tf_init_cli_options
        - terraform validate $tf_validation_cli_options
        - terraform plan $tf_plan_cli_options
    - stage: terraform apply
      # Only run terraform apply stage if outside of a pull request
      if: type IN (push) and branch = master
      script:
        - echo "Merge detected, executing changes"
        - terraform init $tf_init_cli_options
        - terraform apply $tf_apply_cli_options
