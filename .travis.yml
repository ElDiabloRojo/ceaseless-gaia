notifications:
  slack:
    secure: EabTqBzjpK84ud31AyyJkwDkVrq53gfuUobiG9A7vM441HJaG4nIMpVjCDnVwRDloRn8HtGLuI+rPGSK7svqWVle5+UNGGBMKOVKWNCjU5+Bsx1OV4e4W1eWjc41h47UQEFhtIU6/A46VG0eq/1zwknAC1lOZQV8jnc86TZRPEdzKpVtk0FkMhwkIF/3Yr1U0tyzICw7s5oYRBtS1Fwdq0CGGgjftYU83tN2I2+ly/a4vQlxLjmrOm9LmhFg0Gum3Fab0QQIraQu7IzPhzYHMXMTsC33HCwStwgZGgqeKMsmvw05N6+XU6n732IbMHhTLA8s7wQTharTq6bYZ1tvK/ZHdOuzvUg+IgIRVuHUFwDa2wFfGFxWnepHB8lVXbVmuodBRPlmpdVX0itxCcITYx1qjjO0qrpaRL9zBzRbxnXpdAbh/fAFwYGPt6mpKznADASRppTo7qZ/ydGugacIHguCJy0LV4TCKmu9rUvX9f7qXw6xLuo3wKVaVWho2qreT9D9jHzr6QdoRQce0avSz2hkG6iMrLCg7nUxcvjBNlkPk5umWqwtWyXqNjoFvXGIxThB0yqtERmrxPnjy/wzQljjcipQpc/CC/2YPVAgSfdoWTvUbxLf82I2sdxM+vB/LVsvNR1zaB0PxCLWFA4emY1MqRR+cKYkXLWbqufeQL8=

dist: xenial
language: generic

services:
  - docker

env:
  - tf_init_cli_options="-input=false" 
  - tf_validation_cli_options="" 
  - tf_plan_cli_options="-lock=false -input=false" 
  - tf_apply_cli_options="-auto-approve -input=false"

before_install:
  - wget https://releases.hashicorp.com/terraform/"$TF_VERSION"/terraform_"$TF_VERSION"_linux_amd64.zip
  - unzip terraform_"$TF_VERSION"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$TF_VERSION"_linux_amd64.zip

_tf_validation: &_tf_validation
  stage: tf-validation
  script:
  - echo -e "validating ${ENV} iac source"
  - ./ci-scripts/tf-validation.sh $ENV

_tf_apply: &_tf_apply
  script:
  - echo -e "applying ${ENV} iac source"
  - - ./ci-scripts/tf-apply.sh $ENV

jobs:
  include:
#
# Terraform Linting
#
  - stage: linting
    name: tf-linting
    script:
    - echo "Validating Terraform fmt"
    - terraform fmt -recursive -check
  # - stage: go linting
  #   if: type IN (pull_request)
  #   script:
  #   - echo "Performing go code linting..."
  #   - docker run --rm --volume $TRAVIS_BUILD_DIR:/project_files --workdir /project_files golangci/golangci-lint golangci-lint run -v ./... 
# 
# Terraform Code Validation
#
  - name: backend
    <<: *_tf_validation
    env: 
      - ENV=backend
  - name: test
    <<: *_tf_validation
    env: 
      - ENV=test
  - name: development
    <<: *_tf_validation
    env: 
      - ENV=development
#
# Terraform Compliance Testing
#
  - stage: tf-compliance
    if: type IN (push)
    script:
      - cd $TRAVIS_BUILD_DIR/environments/development
      - terraform plan -out development-plan.out
      - docker run --rm -v $PWD:/target -it eerkunt/terraform-compliance -f features -p development-plan.out
  # - stage: terratest
  #   if: type IN (push) # [TODO: can this stage be executed on changes to terraform files?]
  #   script:
  #   - eval "$(gimme 1.13.1)"
  #   - go test ./test/... -v -timeout 30m
#
# Apply Terraform Code
#
  - stage: tf-apply-backend
    if: branch = master
    name: backend
    <<: *_tf_apply
    env: 
      - ENV=backend 
  - stage: tf-apply-development
    if: branch = master
    name: development
    <<: *_tf_apply
    env: 
      - ENV=development  
